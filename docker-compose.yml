version: '3.7'
services:
    postgres:
        image: postgres
        container_name: nestime-postgres
        ports:
            - '${DB_PORT}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        networks:
            - nestime

    redis:
        image: 'redis:alpine'
        container_name: nestime-redis
        ports:
            - '${REDIS_PORT:-6379}:6379'
        networks:
            - nestime

    zookeeper:
        image: confluentinc/cp-zookeeper:latest
        hostname: zookeeper
        container_name: nestime-zookeeper
        ports:
            - "2181:2181"
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_SERVER_ID: 1

    schema-registry:
        image: confluentinc/cp-schema-registry:latest
        hostname: schema-registry
        container_name: nestime-schema-registry
        depends_on:
            - broker
            - zookeeper
        ports:
            - '8081:8081'
        environment:
            SCHEMA_REGISTRY_HOST_NAME: schema-registry
            SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:19092"
            SCHEMA_REGISTRY_DEBUG: 'true'

    broker:
        image: confluentinc/cp-kafka:latest
        hostname: broker
        container_name: nestime-broker
        ports:
            - "9092:9092"
            - "29092:29092"
        environment:
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: INTERNAL://broker:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
            KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
            KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
            KAFKA_BROKER_ID: 1
            KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
            KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
            KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        depends_on:
            - zookeeper

networks:
    nestime:
        driver: bridge
